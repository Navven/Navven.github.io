<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Retr02</title>
  
  <subtitle>拉完屎总是习惯性的回头看</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://retr02.com/"/>
  <updated>2018-11-10T06:29:20.207Z</updated>
  <id>http://retr02.com/</id>
  
  <author>
    <name>Retr02</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker的简单应用</title>
    <link href="http://retr02.com/2018/10/26/Docker%E7%9A%84%E7%AE%80%E5%8D%95%E5%BA%94%E7%94%A8/"/>
    <id>http://retr02.com/2018/10/26/Docker的简单应用/</id>
    <published>2018-10-25T16:27:15.000Z</published>
    <updated>2018-11-10T06:29:20.207Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull hello-world</span><br></pre></td></tr></table></figure><p><img src="https://github.com/Navven/Navven.github.io/blob/master/2018/10/26/images/logo.svg" alt=""></p><hr><h2 id="Docker-是一个开源的应用容器引擎，而一个容器containers其实是一个虚拟化的独立的环境，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的-Linux-机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。"><a href="#Docker-是一个开源的应用容器引擎，而一个容器containers其实是一个虚拟化的独立的环境，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的-Linux-机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。" class="headerlink" title="Docker 是一个开源的应用容器引擎，而一个容器containers其实是一个虚拟化的独立的环境，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。"></a>Docker 是一个开源的应用容器引擎，而一个容器containers其实是一个虚拟化的独立的环境，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。</h2><pre><code>Docker 的局限性之一，它只能用在 64 位的操作系统上。</code></pre><p>……<br>[TOC]<br>……</p><h1 id="Directory"><a href="#Directory" class="headerlink" title="Directory"></a>Directory</h1><h2 id="新版本安装方式"><a href="#新版本安装方式" class="headerlink" title="新版本安装方式"></a>新版本安装方式</h2><h2 id="旧版本安装方式"><a href="#旧版本安装方式" class="headerlink" title="旧版本安装方式"></a>旧版本安装方式</h2><ul><li>命令介绍</li><li>服务管理<h2 id="镜像管理"><a href="#镜像管理" class="headerlink" title="镜像管理"></a>镜像管理</h2><h3 id="通过容器创建镜像"><a href="#通过容器创建镜像" class="headerlink" title="通过容器创建镜像"></a>通过容器创建镜像</h3><h4 id="通过DockerFile创建镜像"><a href="#通过DockerFile创建镜像" class="headerlink" title="通过DockerFile创建镜像"></a>通过DockerFile创建镜像</h4><ul><li>发布自己的镜像</li><li>镜像中安装环境</li></ul></li><li>容器管理<ul><li>容器服务管理</li><li>进入容器</li></ul></li><li>文件拷贝</li><li>Docker私有仓库搭建<ul><li>部署registry</li><li>部署管理工具Harbor</li></ul></li><li>Docker实战了解一下?<ul><li>部署Nginx</li><li>部署Tomcat</li><li>部署Mysql</li><li>部署Redis</li><li>部署Elasticsearch</li><li>部署Gitlab</li><li>部署Rocket.Chat</li><li>部署Humpback</li><li>部署NetDisk</li></ul></li><li>卸载旧版本</li><li>参考资料<ul><li>官方英文资源</li><li>中文资源</li><li>其他资源</li></ul></li></ul><hr><p>Docker 从 1.13 版本之后采用时间线的方式作为版本号，分为社区版 CE 和企业版 EE，社区版是免费提供给个人开发者和小型团体使用的，企业版会提供额外的收费服务，比如经过官方测试认证过的基础设施、容器、插件等。</p><p>社区版按照 stable 和 edge 两种方式发布，每个季度更新 stable 版本，如 17.06，17.09；每个月份更新 edge 版本，如17.09，17.10。</p><h2 id="下面教程运行在-Debian7-0-中"><a href="#下面教程运行在-Debian7-0-中" class="headerlink" title="下面教程运行在 Debian7.0 中"></a>下面教程运行在 Debian7.0 中</h2><h1 id="新版本安装方式-1"><a href="#新版本安装方式-1" class="headerlink" title="新版本安装方式"></a>新版本安装方式</h1><p>Docker官方的安装教程 <a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">轻点这里</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install docker</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
    
  </entry>
  
</feed>
